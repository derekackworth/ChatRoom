{"version":3,"sources":["topbar.js","theme.js","logo.js","user.js","userlist.js","bubble.js","triangle.js","messagebubble.js","messagebubblelist.js","app.js","index.js"],"names":["TopBar","props","AppBar","position","Toolbar","color","Typography","variant","style","marginLeft","isLoggedIn","Button","onClick","handleOpenChangeRoomDialog","roomName","handleLogout","IconButton","handleOpenWhosOnlineDialog","height","width","createMuiTheme","typography","useNextVariants","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","Logo","theme","this","size","React","PureComponent","User","user","ListItem","ref","textAlign","marginBottom","marginRight","chatName","Component","UserList","users","reduce","result","index","push","key","List","Bubble","alignRight","className","backgroundColor","message","fontSize","from","float","time","wordWrap","fontWeight","Triangle","content","bottom","right","borderWidth","borderStyle","borderColor","left","MessageBubble","state","componentDidMount","setState","messageDOM","ReactDOM","findDOMNode","scrollIntoView","block","behavior","blur","MessageBubbleList","messages","map","App","socket","rooms","chatNameMessage","roomNameMessage","isWhosOnlineDialogOpen","roomNameChange","roomNameChangeMessage","isChangeRoomDialogOpen","sockets","messageMessage","isTyping","io","connect","on","onRooms","onNameChange","onWelcome","onMessage","onWhosOnlineDialog","onTyping","emit","dataFromServer","previousState","handleNameChange","e","target","value","handleRoomChange","handleRoomChangeChange","toUpperCase","handleLoginKeyPress","charCode","handleLogin","handleChangeRoomKeyPress","handleChangeRoom","disconnect","forceNew","handleMessageChange","handleSendMessage","handleCloseChangeRoomDialog","handleCloseWhosOnlineDialog","Fragment","Dialog","open","onClose","DialogTitle","DialogContent","TextField","marginTop","onChange","onKeyPress","placeholder","required","inputProps","maxLength","helperText","RadioGroup","alignContent","room","FormControlLabel","control","Radio","label","autoFocus","render","document","getElementById"],"mappings":"iZAoCeA,EAhCA,SAAAC,GAKb,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASC,MAAM,WACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAM,WAA/B,aAGA,yBAAKG,MAAO,CAAEC,WAAY,SAEtBR,EAAMS,YACN,8BACE,kBAACC,EAAA,EAAD,CAASC,QAbc,kBAAMX,EAAMY,8BAaaR,MAAM,WACnDJ,EAAMa,UAET,kBAACH,EAAA,EAAD,CAASC,QAfA,kBAAMX,EAAMc,gBAeaV,MAAM,WAAxC,WAKJ,kBAACW,EAAA,EAAD,CAAYJ,QAnBe,kBAAMX,EAAMgB,+BAoBrC,kBAAC,IAAD,CAAeT,MAAO,CAAEH,MAAO,QAASa,OAAQ,GAAIC,MAAO,W,yBC1BxDC,cACb,CACAC,WACA,CACEC,iBAAiB,GAEnBC,QACA,CACEC,OACA,CACEC,MAAO,OACPC,MAAO,QAETC,WACA,CACEC,MAAO,yBACPC,QAAS,0BAEXC,QACA,CACEC,MAAO,wBACPC,KAAM,uBACNC,KAAM,uBACNC,aAAc,QAEhBC,UACA,CACEJ,MAAO,wBACPC,KAAM,wBACNC,KAAM,wBACNC,aAAc,QAEhBE,MACA,CACEL,MAAO,uBACPC,KAAM,uBACNC,KAAM,uBACNC,aAAc,QAEhBG,KACA,CACEP,QAAS,sBACTK,UAAW,sBACXG,SAAU,sBACVC,KAAM,0BC5BGC,G,uLARX,OACE,kBAAC,IAAD,CAAkBC,MAAQA,GACxB,kBAAC,IAAD,CAASpC,MAAQqC,KAAKzC,MAAMI,MAAQG,MAAO,CAAEU,OAAQwB,KAAKzC,MAAM0C,KAAMxB,MAAOuB,KAAKzC,MAAM0C,a,GAN7EC,IAAMC,gB,mCC4BVC,E,2MA3BbL,MAAQrB,YACR,CACEC,WACA,CACEC,iBAAiB,GAEnBC,QACA,CACEO,QACA,CACEE,KAAM,EAAK/B,MAAM8C,KAAK1C,U,wEAM1B,OACE,kBAAC,IAAD,CAAkBoC,MAAQC,KAAKD,OAC7B,kBAACO,EAAA,EAAD,CAAUC,IAAI,OAAOzC,MAAO,CAAE0C,UAAW,OAAQC,aAAc,QAC7D,kBAAC,IAAD,CAAY9C,MAAM,UAAUG,MAAO,CAAEU,OAAQ,OAAQC,MAAO,OAAQiC,YAAa,UAC/EV,KAAKzC,MAAM8C,KAAKM,SAFpB,gBAE6CX,KAAKzC,MAAM8C,KAAKjC,e,GAtBlD8B,IAAMU,WCcVC,EAfE,SAAAtD,GAEf,IAAIuD,EAAQvD,EAAMuD,MAAMC,QAAO,SAACC,EAAQX,EAAMY,GAO5C,OALIZ,EAAKM,WAAapD,EAAMoD,UAE1BK,EAAOE,KAAK,kBAAC,EAAD,CAAMC,IAAMF,EAAQZ,KAAOA,KAGlCW,IACN,IAEH,OAAO,kBAACI,EAAA,EAAD,KAAQN,I,QCeFO,EA5BA,SAAA9D,GAEb,OAAyB,IAArBA,EAAM+D,WAGN,yBAAKC,UAAU,SAASzD,MAAO,CAAEC,WAAY,OAAQyD,gBAAiBjE,EAAMkE,QAAQ9D,QAClF,0BAAMG,MAAO,CAAC4D,SAAU,YAAenE,EAAMkE,QAAQE,KAArD,KACA,0BAAM7D,MAAO,CAAE4D,SAAU,UAAWE,MAAO,UAAarE,EAAMkE,QAAQI,MACtE,6BACA,6BACA,0BAAM/D,MAAO,CAAEgE,SAAU,aAAcC,WAAY,SAAYxE,EAAMkE,QAAQ9B,OAO/E,yBAAK4B,UAAU,SAASzD,MAAO,CAAEC,WAAY,EAAGyD,gBAAiBjE,EAAMkE,QAAQ9D,QAC7E,0BAAMG,MAAO,CAAE4D,SAAU,YAAenE,EAAMkE,QAAQE,KAAtD,KACA,0BAAM7D,MAAO,CAAE4D,SAAU,UAAWE,MAAO,UAAarE,EAAMkE,QAAQI,MACtE,6BACA,6BACA,0BAAM/D,MAAO,CAAEgE,SAAU,aAAcC,WAAY,SAAYxE,EAAMkE,QAAQ9B,QCWtEqC,EAlCE,SAAAzE,GAEf,OAAyB,IAArBA,EAAM+D,WAGN,yBAAKxD,MACF,CACCmE,QAAS,GACTxE,SAAU,WACVyE,OAAQ,QACRC,MAAO,OACPC,YAAa,oBACbC,YAAa,QACbC,YAAY,GAAD,OAAK/E,EAAMI,MAAX,mBAOf,yBAAKG,MACF,CACCmE,QAAS,GACTxE,SAAU,WACVyE,OAAQ,QACRK,KAAM,OACNH,YAAa,oBACbC,YAAa,QACbC,YAAY,GAAD,OAAK/E,EAAMI,MAAX,oBCUN6E,E,2MAhCbC,MACA,CACEnB,YAAY,G,EAGdoB,kBAAoB,WAEd,EAAKnF,MAAMkE,QAAQE,OAAS,EAAKpE,MAAMoD,UAEzC,EAAKgC,SAAS,CAAErB,YAAY,IAG9B,IAAIsB,EAAaC,IAASC,YAAT,gBACjBF,EAAWG,eAAe,CAAEC,MAAO,MAAOC,SAAU,WACpDL,EAAWM,Q,wEAIZ,IACS5B,EAAetB,KAAKyC,MAApBnB,WACR,OACE,6BACE,kBAAChB,EAAA,EAAD,CAAUC,IAAI,UAAUzC,MAAO,CAAE0C,UAAW,OAAQC,aAAc,QAChE,kBAAC,EAAD,CAAQgB,QAAUzB,KAAKzC,MAAMkE,QAAUH,WAAaA,IACpD,kBAAC,EAAD,CAAU3D,MAAQqC,KAAKzC,MAAMkE,QAAQ9D,MAAQ2D,WAAaA,KAE5D,kC,GA5BoBpB,IAAMU,WCQnBuC,EAVW,SAAA5F,GAExB,IAAI6F,EAAW7F,EAAM6F,SAASC,KAAI,SAAC5B,EAASR,GAE1C,OAAO,kBAAC,EAAD,CAAeE,IAAMF,EAAQQ,QAAUA,EAAUd,SAAWpD,EAAMoD,cAG3E,OAAO,kBAACS,EAAA,EAAD,KAAQgC,ICqXFE,E,2MAhXXb,MACA,CACIc,OAAQ,KACRvF,YAAY,EACZwF,MAAO,GACP7C,SAAU,GACV8C,gBAAiB,mBACjBrF,SAAU,GACVsF,gBAAiB,oBACjBC,wBAAwB,EACxBC,eAAgB,GAChBC,sBAAuB,oBACvBC,wBAAwB,EACxBC,QAAS,GACTX,SAAU,GACV3B,QAAS,GACTuC,eAAgB,GAChBC,UAAU,G,EAGdvB,kBAAoB,WAEhB,IAAMa,EAASW,IAAGC,UAClB,EAAKxB,SAAS,CAAEY,OAAQA,IACxBA,EAAOa,GAAG,QAAS,EAAKC,SACxBd,EAAOa,GAAG,aAAc,EAAKE,cAC7Bf,EAAOa,GAAG,UAAW,EAAKG,WAC1BhB,EAAOa,GAAG,UAAW,EAAKI,WAC1BjB,EAAOa,GAAG,mBAAoB,EAAKK,oBACnClB,EAAOa,GAAG,SAAU,EAAKM,UACzBnB,EAAOoB,KAAK,U,EAGhBN,QAAU,SAAAO,GAEN,EAAKjC,SAAS,CAAEa,MAAOoB,K,EAG3BN,aAAe,SAAAM,GAEX,EAAKjC,SAAS,CAAEc,gBAAiBmB,K,EAGrCL,UAAY,SAAAK,GAER,EAAKJ,UAAUI,GACf,EAAKjC,SAAS,CAAE3E,YAAY,K,EAGhCyG,mBAAqB,SAAAG,GAEjB,EAAKjC,SAAS,CAAEoB,QAASa,K,EAG7BJ,UAAY,SAAAI,GAER,EAAKjC,SAAS,CAAEqB,eAAgB,GAAIC,UAAU,IAEnB,KAAvB,EAAKxB,MAAMhB,UAEX,EAAKkB,SAAS,CAAEsB,UAAU,IAC1B,EAAKxB,MAAMc,OAAOoB,KAAK,WAG3B,EAAKhC,UAAS,SAAAkC,GAEV,IAAIzB,EAAQ,YAAOyB,EAAczB,UAEjC,OADAA,EAASlC,KAAK0D,GACP,CAAExB,gB,EAIjBsB,SAAW,SAAAE,GAEP,EAAKjC,SAAS,CAAEqB,eAAgBY,K,EAGpCE,iBAAmB,SAAAC,GAEf,EAAKpC,SAAS,CAAEhC,SAAUoE,EAAEC,OAAOC,QACnC,EAAKxC,MAAMc,OAAOoB,KAAK,aAAc,CAAEhE,SAAUoE,EAAEC,OAAOC,S,EAG9DC,iBAAmB,SAAAH,GAEQ,KAAnBA,EAAEC,OAAOC,MAET,EAAKtC,SAAS,CAAEvE,SAAU2G,EAAEC,OAAOC,MAAOvB,gBAAiB,KAI3D,EAAKf,SAAS,CAAEvE,SAAU2G,EAAEC,OAAOC,MAAOvB,gBAAiB,uB,EAInEyB,uBAAyB,SAAAJ,GAEjBA,EAAEC,OAAOC,MAAMG,gBAAkB,EAAK3C,MAAMrE,SAE5C,EAAKuE,SAAS,CAAEiB,eAAgBmB,EAAEC,OAAOC,MAAOpB,sBAAuB,iCAE/C,KAAnBkB,EAAEC,OAAOC,MAEd,EAAKtC,SAAS,CAAEiB,eAAgBmB,EAAEC,OAAOC,MAAOpB,sBAAuB,KAIvE,EAAKlB,SAAS,CAAEiB,eAAgBmB,EAAEC,OAAOC,MAAOpB,sBAAuB,uB,EAI/EwB,oBAAsB,SAAAN,GAEC,KAAfA,EAAEO,UAAkD,KAA/B,EAAK7C,MAAMgB,iBAAyD,KAA/B,EAAKhB,MAAMiB,iBAErE,EAAK6B,e,EAIbA,YAAc,WAEV,EAAK5C,SAAS,CAAEvE,SAAU,EAAKqE,MAAMrE,SAASgH,gBAC9C,EAAK3C,MAAMc,OAAOoB,KAAK,QAAS,CAAEhE,SAAU,EAAK8B,MAAM9B,SAAUvC,SAAU,EAAKqE,MAAMrE,Y,EAG1FoH,yBAA2B,SAAAT,GAEJ,KAAfA,EAAEO,UAAwD,KAArC,EAAK7C,MAAMoB,uBAEhC,EAAK4B,oB,EAIbA,iBAAmB,WAEf,EAAK9C,SAAS,CAAES,SAAU,KAC1B,EAAKX,MAAMc,OAAOoB,KAAK,aAAc,CAAEf,eAAgB,EAAKnB,MAAMmB,eAAewB,gBACjF,EAAKzC,SACD,CACIvE,SAAU,EAAKqE,MAAMmB,eAAewB,cACpCxB,eAAgB,GAChBC,sBAAuB,oBACvBC,wBAAwB,K,EAIpCzF,aAAe,WAEX,EAAKoE,MAAMc,OAAOmC,aAClB,EAAK/C,SACD,CACI3E,YAAY,EACZ2C,SAAU,GACV8C,gBAAiB,mBACjBrF,SAAU,GACVsF,gBAAiB,oBACjBE,eAAgB,GAChBC,sBAAuB,oBACvBT,SAAU,GACV3B,QAAS,GACTuC,eAAgB,GAChBC,UAAU,IAElB,IAAMV,EAASW,IAAGC,QAAQ,iBAAkB,CAAEwB,UAAU,IACxD,EAAKhD,SAAS,CAAEY,OAAQA,IACxBA,EAAOa,GAAG,QAAS,EAAKC,SACxBd,EAAOa,GAAG,aAAc,EAAKE,cAC7Bf,EAAOa,GAAG,UAAW,EAAKG,WAC1BhB,EAAOa,GAAG,UAAW,EAAKI,WAC1BjB,EAAOa,GAAG,mBAAoB,EAAKK,oBACnClB,EAAOa,GAAG,SAAU,EAAKM,UACzBnB,EAAOoB,KAAK,U,EAGhBiB,oBAAsB,SAAAb,GAElB,EAAKpC,SAAS,CAAElB,QAASsD,EAAEC,OAAOC,SAEN,IAAxB,EAAKxC,MAAMwB,WAEX,EAAKtB,SAAS,CAAEsB,UAAU,IAC1B,EAAKxB,MAAMc,OAAOoB,KAAK,Y,EAI/BkB,kBAAoB,SAAAd,GAEF,UAAVA,EAAE5D,KAA0C,KAAvB,EAAKsB,MAAMhB,UAEhC,EAAKgB,MAAMc,OAAOoB,KAAK,UAAW,CAAEhF,KAAM,EAAK8C,MAAMhB,UACrD,EAAKkB,SAAS,CAAElB,QAAS,GAAIwC,UAAU,M,EAI/C9F,2BAA6B,WAEzB,EAAKsE,MAAMc,OAAOoB,KAAK,SACvB,EAAKhC,SAAS,CAAEmB,wBAAwB,K,EAG5CgC,4BAA8B,WAE1B,EAAKnD,SAAS,CAAEiB,eAAgB,GAAIC,sBAAuB,oBAAqBC,wBAAwB,K,EAG5GvF,2BAA6B,WAEzB,EAAKkE,MAAMc,OAAOoB,KAAK,oBACvB,EAAKhC,SAAS,CAAEgB,wBAAwB,K,EAG5CoC,4BAA8B,WAE1B,EAAKpD,SAAS,CAAEgB,wBAAwB,K,wEAI3C,IAAD,EAiBQ3D,KAAKyC,MAdLzE,EAHR,EAGQA,WACAwF,EAJR,EAIQA,MACA7C,EALR,EAKQA,SACA8C,EANR,EAMQA,gBACArF,EAPR,EAOQA,SACAsF,EARR,EAQQA,gBACAC,EATR,EASQA,uBACAC,EAVR,EAUQA,eACAC,EAXR,EAWQA,sBACAC,EAZR,EAYQA,uBACAC,EAbR,EAaQA,QACAX,EAdR,EAcQA,SACA3B,EAfR,EAeQA,QACAuC,EAhBR,EAgBQA,eAEJ,OACI,kBAAC,IAAD,CAAkBjE,MAAQA,GACtB,kBAAC,IAAMiG,SAAP,KACI,kBAAC,EAAD,CACI5H,SAAWA,EACXD,2BAA6B6B,KAAK7B,2BAClCH,WAAaA,EACbK,aAAe2B,KAAK3B,aACpBE,2BAA6ByB,KAAKzB,6BACtC,kBAAC0H,EAAA,EAAD,CAAQC,KAAOpC,EAAyBqC,QAAUnG,KAAK8F,6BACnD,kBAACM,EAAA,EAAD,CAAatI,MAAO,CAAE0C,UAAW,WAAjC,eACA,kBAAC6F,EAAA,EAAD,KACI,yBAAKvI,MAAO,CAAE0C,UAAW,WACrB,kBAAC8F,EAAA,EAAD,CACIxI,MAAO,CAAEyI,UAAW,QACpBC,SAAWxG,KAAKmF,uBAChBsB,WAAazG,KAAKwF,yBAClBkB,YAAY,YACZC,UAAQ,EACR1B,MAAQrB,EACRgD,WAAY,CAAEC,UAAW,IACzBnH,MAAkC,KAA1BmE,EACRiD,WAAajD,IACjB,kBAACjG,EAAA,EAAD,CAAYE,MAAO,CAAEyI,UAAW,QAAU5I,MAAM,WAAhD,mBACA,kBAACoJ,EAAA,EAAD,CACIjJ,MAAO,CAAEkJ,aAAc,SAAUT,UAAW,OAC5CC,SAAWxG,KAAKmF,uBAChBsB,WAAazG,KAAKwF,yBAClBP,MAAQrB,GAEJJ,EAAMH,KAAI,SAAC4D,EAAMhG,GAAP,OACNgG,IAAS7I,GACT,kBAAC8I,EAAA,EAAD,CACI/F,IAAMF,EACNgE,MAAQgC,EACRE,QAAU,kBAACC,EAAA,EAAD,CAAOzJ,MAAM,YACvB0J,MAAQJ,QAIxB,kBAAChJ,EAAA,EAAD,CACIH,MAAO,CAAEyI,UAAW,QACpBrI,QAAU8B,KAAKyF,iBACf9H,MAAM,UACNE,QAAQ,YACR+B,SAAqC,KAA1BiE,GALf,kBAWZ,kBAACoC,EAAA,EAAD,CAAQC,KAAOvC,EAAyBwC,QAAUnG,KAAK+F,6BACnD,kBAACK,EAAA,EAAD,CAAatI,MAAO,CAAE0C,UAAW,WAAjC,iBACA,kBAAC6F,EAAA,EAAD,KACI,kBAAC,EAAD,CAAUvF,MAAQiD,EAAUpD,SAAWA,OAI1C3C,GACG,yBAAKF,MAAO,CAAE0C,UAAW,WACrB,kBAAC,EAAD,CAAM7C,MAAM,UAAUsC,KAAK,QAC3B,kBAACrC,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAM,WAA/B,SACA,kBAAC2I,EAAA,EAAD,CACIxI,MAAO,CAAEyI,UAAW,QACpBC,SAAWxG,KAAK8E,iBAChB2B,WAAazG,KAAKqF,oBAClBqB,YAAY,YACZY,WAAW,EACXX,UAAQ,EACR1B,MAAQtE,EACRiG,WAAY,CAAEC,UAAW,IACzBnH,MAA4B,KAApB+D,EACRqD,WAAarD,IACjB,6BACA,kBAAC6C,EAAA,EAAD,CACIxI,MAAO,CAAEyI,UAAW,QACpBC,SAAWxG,KAAKkF,iBAChBuB,WAAazG,KAAKqF,oBAClBqB,YAAY,YACZC,UAAQ,EACR1B,MAAQ7G,EACRwI,WAAY,CAAEC,UAAW,IACzBnH,MAA4B,KAApBgE,EACRoD,WAAapD,IACjB,kBAAC9F,EAAA,EAAD,CAAYE,MAAO,CAAEyI,UAAW,QAAU5I,MAAM,WAAhD,mBACA,kBAACoJ,EAAA,EAAD,CACIjJ,MAAO,CAAEkJ,aAAc,SAAUT,UAAW,OAC5CC,SAAWxG,KAAKkF,iBAChBuB,WAAazG,KAAKqF,oBAClBJ,MAAQ7G,GAEJoF,EAAMH,KAAI,SAAC4D,EAAMhG,GAAP,OACN,kBAACiG,EAAA,EAAD,CACI/F,IAAMF,EACNgE,MAAQgC,EACRE,QAAU,kBAACC,EAAA,EAAD,CAAOzJ,MAAM,YACvB0J,MAAQJ,QAIxB,kBAAChJ,EAAA,EAAD,CACIH,MAAO,CAAEyI,UAAW,QACpBrI,QAAU8B,KAAKuF,YACf5H,MAAM,UACNE,QAAQ,YACR+B,SAA+B,KAApB6D,GAA8C,KAApBC,GALzC,UAWR1F,GACA,6BACI,yBAAKuD,UAAU,eACX,kBAAC,EAAD,CAAmB6B,SAAWA,EAAWzC,SAAWA,KAExD,kBAAC2F,EAAA,EAAD,CACIxI,MAAO,CAAEL,SAAU,WAAYyE,OAAQ,OAAQzD,MAAO,qBACtD+H,SAAWxG,KAAK4F,oBAChBa,WAAazG,KAAK6F,kBAClBa,YAAY,UACZY,WAAS,EACTX,UAAQ,EACR1B,MAAQxD,EACRqF,WAAa9C,W,GAzW3B9D,IAAMC,eCVxB0C,IAAS0E,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.01fac4dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Button, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\n\r\nconst TopBar = props =>\r\n{\r\n  const handleOpenChangeRoomDialog = () => props.handleOpenChangeRoomDialog();\r\n  const handleLogout = () => props.handleLogout();\r\n  const handleOpenWhosOnlineDialog = () => props.handleOpenWhosOnlineDialog();\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar color=\"primary\">\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          Chat Room\r\n        </Typography>\r\n        <div style={{ marginLeft: \"auto\" }}>\r\n          {\r\n            props.isLoggedIn &&\r\n            <span>\r\n              <Button  onClick={ handleOpenChangeRoomDialog } color=\"inherit\">\r\n                {props.roomName}\r\n              </Button>\r\n              <Button  onClick={ handleLogout } color=\"inherit\">\r\n                Logout\r\n              </Button>\r\n            </span>\r\n          }\r\n          <IconButton onClick={ handleOpenWhosOnlineDialog }>\r\n            <Accessibility style={{ color: \"white\", height: 50, width: 50 }}/>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme(\r\n  {\r\n  typography:\r\n  {\r\n    useNextVariants: true\r\n  },\r\n  palette:\r\n  {\r\n    common:\r\n    { \r\n      black: \"#000\",\r\n      white: \"#fff\"\r\n    },\r\n    background:\r\n    {\r\n      paper: \"rgba(232, 234, 246, 1)\",\r\n      default: \"rgba(197, 202, 233, 1)\"\r\n    },\r\n    primary:\r\n    {\r\n      light: \"rgba(92, 107, 192, 1)\",\r\n      main: \"rgba(57, 73, 171, 1)\",\r\n      dark: \"rgba(40, 53, 147, 1)\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary:\r\n    {\r\n      light: \"rgba(171, 71, 188, 1)\",\r\n      main: \"rgba(142, 36, 170, 1)\",\r\n      dark: \"rgba(106, 27, 154, 1)\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    error:\r\n    {\r\n      light: \"rgba(239, 83, 80, 1)\",\r\n      main: \"rgba(229, 57, 53, 1)\",\r\n      dark: \"rgba(198, 40, 40, 1)\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    text:\r\n    {\r\n      primary: \"rgba(0, 0, 0, 0.87)\",\r\n      secondary: \"rgba(0, 0, 0, 0.54)\",\r\n      disabled: \"rgba(0, 0, 0, 0.38)\",\r\n      hint: \"rgba(0, 0, 0, 0.38)\"\r\n    }\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Message from \"@material-ui/icons/Message\";\r\nimport theme from \"./theme\";\r\nimport \"./app.css\";\r\n\r\nclass Logo extends React.PureComponent\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <MuiThemeProvider theme={ theme }>\r\n        <Message color={ this.props.color } style={{ height: this.props.size, width: this.props.size }}/>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport AccountBox from \"@material-ui/icons/AccountBox\";\r\n\r\nclass User extends React.Component\r\n{\r\n  theme = createMuiTheme(\r\n  {\r\n    typography:\r\n    {\r\n      useNextVariants: true\r\n    },\r\n    palette:\r\n    {\r\n      primary:\r\n      {\r\n        main: this.props.user.color\r\n      }\r\n    }\r\n  });\r\n  render()\r\n  {\r\n    return (\r\n      <MuiThemeProvider theme={ this.theme }>\r\n        <ListItem ref=\"user\" style={{ textAlign: \"left\", marginBottom: \"2px\" }}>\r\n          <AccountBox color=\"primary\" style={{ height: \"30px\", width: \"30px\", marginRight: \"20px\" }} />\r\n          { this.props.user.chatName } is in room: { this.props.user.roomName }\r\n        </ListItem>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { List } from \"@material-ui/core\";\r\nimport User from \"./user\";\r\n\r\nconst UserList = props =>\r\n{\r\n  let users = props.users.reduce((result, user, index) =>\r\n  {\r\n    if (user.chatName !== props.chatName)\r\n    {\r\n      result.push(<User key={ index } user={ user } />);\r\n    }\r\n\r\n    return result;\r\n  }, []);\r\n  \r\n  return <List>{ users }</List>;\r\n};\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport \"./app.css\";\r\n\r\nconst Bubble = props =>\r\n{\r\n  if (props.alignRight === true)\r\n  {\r\n    return (\r\n      <div className=\"bubble\" style={{ marginLeft: \"auto\", backgroundColor: props.message.color }}>\r\n        <span style={{fontSize: \"smaller\" }}>{ props.message.from }:</span>\r\n        <span style={{ fontSize: \"smaller\", float: \"right\" }}>{ props.message.time }</span>\r\n        <br />\r\n        <br />\r\n        <span style={{ wordWrap: \"break-word\", fontWeight: \"bold\" }}>{ props.message.text }</span>\r\n      </div>\r\n      );\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <div className=\"bubble\" style={{ marginLeft: 0, backgroundColor: props.message.color }}>\r\n        <span style={{ fontSize: \"smaller\" }}>{ props.message.from }:</span>\r\n        <span style={{ fontSize: \"smaller\", float: \"right\" }}>{ props.message.time }</span>\r\n        <br />\r\n        <br />\r\n        <span style={{ wordWrap: \"break-word\", fontWeight: \"bold\" }}>{ props.message.text }</span>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Bubble;\r\n","import React from \"react\";\r\n\r\nconst Triangle = props =>\r\n{\r\n  if (props.alignRight === true)\r\n  {\r\n    return (\r\n      <div style=\r\n        {{\r\n          content: \"\",\r\n          position: \"absolute\",\r\n          bottom: \"-18px\",\r\n          right: \"50px\",\r\n          borderWidth: \"10px 0px 0px 10px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: `${props.color} transparent`\r\n        }} />\r\n    );\r\n  }\r\n  else\r\n  {\r\n    return (\r\n      <div style=\r\n        {{\r\n          content: \"\",\r\n          position: \"absolute\",\r\n          bottom: \"-18px\",\r\n          left: \"50px\",\r\n          borderWidth: \"10px 10px 0px 0px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: `${props.color} transparent`\r\n        }} />\r\n    );\r\n  }\r\n};\r\n\r\nexport default Triangle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport Bubble from \"./bubble\";\r\nimport Triangle from \"./triangle\";\r\n\r\nclass MessageBubble extends React.Component\r\n{\r\n  state =\r\n  {\r\n    alignRight: false\r\n  };\r\n\r\n  componentDidMount = () =>\r\n  {\r\n    if (this.props.message.from === this.props.chatName)\r\n    {\r\n      this.setState({ alignRight: true });\r\n    }\r\n\r\n    let messageDOM = ReactDOM.findDOMNode(this);\r\n    messageDOM.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    messageDOM.blur();\r\n  };\r\n\r\n  render()\r\n  {\r\n    const { alignRight } = this.state;\r\n    return (\r\n      <div>\r\n        <ListItem ref=\"message\" style={{ textAlign: \"left\", marginBottom: \"5px\" }}>\r\n          <Bubble message={ this.props.message } alignRight={ alignRight } />\r\n          <Triangle color={ this.props.message.color } alignRight={ alignRight } />\r\n        </ListItem>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageBubble;\r\n","import React from \"react\";\r\nimport { List } from \"@material-ui/core\";\r\nimport MessageBubble from \"./messagebubble\";\r\n\r\nconst MessageBubbleList = props =>\r\n{\r\n  let messages = props.messages.map((message, index) =>\r\n  {\r\n    return <MessageBubble key={ index } message={ message } chatName={ props.chatName } />;\r\n  });\r\n\r\n  return <List>{ messages }</List>;\r\n};\r\n\r\nexport default MessageBubbleList;\r\n","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport\r\n{\r\n    Button, TextField, Dialog, DialogTitle, DialogContent, Typography, Radio, RadioGroup, FormControlLabel\r\n} from \"@material-ui/core\";\r\nimport TopBar from \"./topbar\";\r\nimport Logo from \"./logo\";\r\nimport UserList from \"./userlist\";\r\nimport MessageBubbleList from \"./messagebubblelist\";\r\nimport theme from \"./theme\";\r\nimport \"./app.css\";\r\n\r\nclass App extends React.PureComponent\r\n{\r\n    state =\r\n    {\r\n        socket: null,\r\n        isLoggedIn: false,\r\n        rooms: [],\r\n        chatName: \"\",\r\n        chatNameMessage: \"Enter a username\",\r\n        roomName: \"\",\r\n        roomNameMessage: \"Enter a room name\",\r\n        isWhosOnlineDialogOpen: false,\r\n        roomNameChange: \"\",\r\n        roomNameChangeMessage: \"Enter a room name\",\r\n        isChangeRoomDialogOpen: false,\r\n        sockets: [],\r\n        messages: [],\r\n        message: \"\",\r\n        messageMessage: \"\",\r\n        isTyping: false\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        const socket = io.connect();\r\n        this.setState({ socket: socket });\r\n        socket.on(\"rooms\", this.onRooms);\r\n        socket.on(\"namechange\", this.onNameChange);\r\n        socket.on(\"welcome\", this.onWelcome);\r\n        socket.on(\"message\", this.onMessage);\r\n        socket.on(\"whosonlinedialog\", this.onWhosOnlineDialog);\r\n        socket.on(\"typing\", this.onTyping);\r\n        socket.emit(\"rooms\");\r\n    }\r\n\r\n    onRooms = dataFromServer =>\r\n    {\r\n        this.setState({ rooms: dataFromServer });\r\n    }\r\n\r\n    onNameChange = dataFromServer =>\r\n    {\r\n        this.setState({ chatNameMessage: dataFromServer});\r\n    }\r\n\r\n    onWelcome = dataFromServer =>\r\n    {\r\n        this.onMessage(dataFromServer);\r\n        this.setState({ isLoggedIn: true });\r\n    }\r\n\r\n    onWhosOnlineDialog = dataFromServer =>\r\n    {\r\n        this.setState({ sockets: dataFromServer });\r\n    }\r\n\r\n    onMessage = dataFromServer =>\r\n    {\r\n        this.setState({ messageMessage: \"\", isTyping: false });\r\n\r\n        if (this.state.message !== \"\")\r\n        {\r\n            this.setState({ isTyping: true });\r\n            this.state.socket.emit(\"typing\");\r\n        }\r\n\r\n        this.setState(previousState =>\r\n        {\r\n            let messages = [...previousState.messages];\r\n            messages.push(dataFromServer);\r\n            return { messages };\r\n        });\r\n    }\r\n\r\n    onTyping = dataFromServer =>\r\n    {\r\n        this.setState({ messageMessage: dataFromServer });\r\n    }\r\n\r\n    handleNameChange = e =>\r\n    {\r\n        this.setState({ chatName: e.target.value });\r\n        this.state.socket.emit(\"namechange\", { chatName: e.target.value });\r\n    }\r\n\r\n    handleRoomChange = e =>\r\n    {\r\n        if (e.target.value !== \"\")\r\n        {\r\n            this.setState({ roomName: e.target.value, roomNameMessage: \"\" });\r\n        }\r\n        else\r\n        {\r\n            this.setState({ roomName: e.target.value, roomNameMessage: \"Enter a room name\" });\r\n        }\r\n    }\r\n\r\n    handleRoomChangeChange = e =>\r\n    {\r\n        if (e.target.value.toUpperCase() === this.state.roomName)\r\n        {\r\n            this.setState({ roomNameChange: e.target.value, roomNameChangeMessage: \"You are already in this room\" });\r\n        }\r\n        else if (e.target.value !== \"\")\r\n        {\r\n            this.setState({ roomNameChange: e.target.value, roomNameChangeMessage: \"\" });\r\n        }\r\n        else\r\n        {\r\n            this.setState({ roomNameChange: e.target.value, roomNameChangeMessage: \"Enter a room name\" });\r\n        }\r\n    }\r\n\r\n    handleLoginKeyPress = e =>\r\n    {\r\n        if (e.charCode === 13 && this.state.chatNameMessage === \"\" && this.state.roomNameMessage === \"\")\r\n        {\r\n            this.handleLogin();\r\n        } \r\n    }\r\n\r\n    handleLogin = () =>\r\n    {\r\n        this.setState({ roomName: this.state.roomName.toUpperCase() })\r\n        this.state.socket.emit(\"login\", { chatName: this.state.chatName, roomName: this.state.roomName });\r\n    }\r\n\r\n    handleChangeRoomKeyPress = e =>\r\n    {\r\n        if (e.charCode === 13 && this.state.roomNameChangeMessage === \"\")\r\n        {\r\n            this.handleChangeRoom();\r\n        } \r\n    }\r\n\r\n    handleChangeRoom = () =>\r\n    {\r\n        this.setState({ messages: [] })\r\n        this.state.socket.emit(\"changeroom\", { roomNameChange: this.state.roomNameChange.toUpperCase() });\r\n        this.setState(\r\n            {\r\n                roomName: this.state.roomNameChange.toUpperCase(),\r\n                roomNameChange: \"\",\r\n                roomNameChangeMessage: \"Enter a room name\",\r\n                isChangeRoomDialogOpen: false\r\n            });\r\n    }\r\n\r\n    handleLogout = () =>\r\n    {\r\n        this.state.socket.disconnect();\r\n        this.setState(\r\n            { \r\n                isLoggedIn: false,\r\n                chatName: \"\",\r\n                chatNameMessage: \"Enter a username\",\r\n                roomName: \"\",\r\n                roomNameMessage: \"Enter a room name\",\r\n                roomNameChange: \"\",\r\n                roomNameChangeMessage: \"Enter a room name\",\r\n                messages: [],\r\n                message: \"\",\r\n                messageMessage: \"\",\r\n                isTyping: false\r\n            });\r\n        const socket = io.connect(\"localhost:5000\", { forceNew: true });\r\n        this.setState({ socket: socket });\r\n        socket.on(\"rooms\", this.onRooms);\r\n        socket.on(\"namechange\", this.onNameChange);\r\n        socket.on(\"welcome\", this.onWelcome);\r\n        socket.on(\"message\", this.onMessage);\r\n        socket.on(\"whosonlinedialog\", this.onWhosOnlineDialog);\r\n        socket.on(\"typing\", this.onTyping);\r\n        socket.emit(\"rooms\");\r\n    }\r\n\r\n    handleMessageChange = e =>\r\n    {\r\n        this.setState({ message: e.target.value });\r\n\r\n        if (this.state.isTyping === false)\r\n        {\r\n            this.setState({ isTyping: true });\r\n            this.state.socket.emit(\"typing\");\r\n        }\r\n    }\r\n\r\n    handleSendMessage = e =>\r\n    {\r\n        if (e.key === \"Enter\" && this.state.message !== \"\")\r\n        {\r\n            this.state.socket.emit(\"message\", { text: this.state.message });\r\n            this.setState({ message: \"\", isTyping: false });\r\n        }\r\n    }\r\n\r\n    handleOpenChangeRoomDialog = () =>\r\n    {\r\n        this.state.socket.emit(\"rooms\");\r\n        this.setState({ isChangeRoomDialogOpen: true });\r\n    }\r\n\r\n    handleCloseChangeRoomDialog = () =>\r\n    {\r\n        this.setState({ roomNameChange: \"\", roomNameChangeMessage: \"Enter a room name\", isChangeRoomDialogOpen: false });\r\n    }\r\n\r\n    handleOpenWhosOnlineDialog = () =>\r\n    {\r\n        this.state.socket.emit(\"whosonlinedialog\");\r\n        this.setState({ isWhosOnlineDialogOpen: true });\r\n    }\r\n\r\n    handleCloseWhosOnlineDialog = () =>\r\n    {\r\n        this.setState({ isWhosOnlineDialogOpen: false });\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const\r\n        {\r\n            isLoggedIn,\r\n            rooms,\r\n            chatName,\r\n            chatNameMessage,\r\n            roomName,\r\n            roomNameMessage,\r\n            isWhosOnlineDialogOpen,\r\n            roomNameChange,\r\n            roomNameChangeMessage,\r\n            isChangeRoomDialogOpen,\r\n            sockets,\r\n            messages,\r\n            message,\r\n            messageMessage\r\n        } = this.state;\r\n        return (\r\n            <MuiThemeProvider theme={ theme }>\r\n                <React.Fragment>\r\n                    <TopBar\r\n                        roomName={ roomName }\r\n                        handleOpenChangeRoomDialog={ this.handleOpenChangeRoomDialog }\r\n                        isLoggedIn={ isLoggedIn }\r\n                        handleLogout={ this.handleLogout }\r\n                        handleOpenWhosOnlineDialog={ this.handleOpenWhosOnlineDialog }/>\r\n                    <Dialog open={ isChangeRoomDialogOpen}  onClose={ this.handleCloseChangeRoomDialog }>\r\n                        <DialogTitle style={{ textAlign: \"center\" }}>Change Room</DialogTitle>\r\n                        <DialogContent>\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <TextField\r\n                                    style={{ marginTop: \"15px\" }}\r\n                                    onChange={ this.handleRoomChangeChange }\r\n                                    onKeyPress={ this.handleChangeRoomKeyPress }\r\n                                    placeholder=\"Room Name\"\r\n                                    required\r\n                                    value={ roomNameChange }\r\n                                    inputProps={{ maxLength: 20 }}\r\n                                    error={ roomNameChangeMessage !== \"\" }\r\n                                    helperText={ roomNameChangeMessage }/>\r\n                                <Typography style={{ marginTop: \"15px\" }} color=\"primary\">Existing rooms:</Typography>\r\n                                <RadioGroup\r\n                                    style={{ alignContent: \"center\", marginTop: \"5px\" }}\r\n                                    onChange={ this.handleRoomChangeChange }\r\n                                    onKeyPress={ this.handleChangeRoomKeyPress }\r\n                                    value={ roomNameChange }>\r\n                                    {\r\n                                        rooms.map((room, index) => \r\n                                            room !== roomName &&\r\n                                            <FormControlLabel\r\n                                                key={ index }\r\n                                                value={ room }\r\n                                                control={ <Radio color=\"primary\" /> }\r\n                                                label={ room }/>\r\n                                            )\r\n                                    }\r\n                                </RadioGroup>\r\n                                <Button\r\n                                    style={{ marginTop: \"15px\" }}\r\n                                    onClick={ this.handleChangeRoom }\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    disabled={ roomNameChangeMessage !== \"\" }>\r\n                                    Change Room\r\n                                </Button>\r\n                            </div>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                    <Dialog open={ isWhosOnlineDialogOpen } onClose={ this.handleCloseWhosOnlineDialog }>\r\n                        <DialogTitle style={{ textAlign: \"center\" }}>Who\"s Online?</DialogTitle>\r\n                        <DialogContent>\r\n                            <UserList users={ sockets } chatName={ chatName } />\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                    {\r\n                        !isLoggedIn &&\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <Logo color=\"primary\" size=\"100\" />\r\n                                <Typography variant=\"h4\" color=\"primary\">Login</Typography>\r\n                                <TextField\r\n                                    style={{ marginTop: \"30px\" }}\r\n                                    onChange={ this.handleNameChange }\r\n                                    onKeyPress={ this.handleLoginKeyPress }\r\n                                    placeholder=\"Chat Name\"\r\n                                    autoFocus={true}\r\n                                    required\r\n                                    value={ chatName }\r\n                                    inputProps={{ maxLength: 20 }}\r\n                                    error={ chatNameMessage !== \"\" }\r\n                                    helperText={ chatNameMessage }/>\r\n                                <br />\r\n                                <TextField\r\n                                    style={{ marginTop: \"15px\" }}\r\n                                    onChange={ this.handleRoomChange }\r\n                                    onKeyPress={ this.handleLoginKeyPress }\r\n                                    placeholder=\"Room Name\"\r\n                                    required\r\n                                    value={ roomName }\r\n                                    inputProps={{ maxLength: 20 }}\r\n                                    error={ roomNameMessage !== \"\" }\r\n                                    helperText={ roomNameMessage }/>\r\n                                <Typography style={{ marginTop: \"15px\" }} color=\"primary\">Existing rooms:</Typography>\r\n                                <RadioGroup\r\n                                    style={{ alignContent: \"center\", marginTop: \"5px\" }}\r\n                                    onChange={ this.handleRoomChange }\r\n                                    onKeyPress={ this.handleLoginKeyPress }\r\n                                    value={ roomName }>\r\n                                    {\r\n                                        rooms.map((room, index) =>\r\n                                            <FormControlLabel\r\n                                                key={ index }\r\n                                                value={ room }\r\n                                                control={ <Radio color=\"primary\" /> }\r\n                                                label={ room }/>\r\n                                            )\r\n                                    }\r\n                                </RadioGroup>\r\n                                <Button\r\n                                    style={{ marginTop: \"15px\" }}\r\n                                    onClick={ this.handleLogin }\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    disabled={ chatNameMessage !== \"\" || roomNameMessage !== \"\" }>\r\n                                    Login\r\n                                </Button>\r\n                            </div>\r\n                    }\r\n                    {\r\n                        isLoggedIn &&\r\n                        <div>\r\n                            <div className=\"messageList\">\r\n                                <MessageBubbleList messages={ messages } chatName={ chatName } />\r\n                            </div>\r\n                            <TextField\r\n                                style={{ position: \"absolute\", bottom: \"10px\", width: \"calc(100% - 15px)\" }}\r\n                                onChange={ this.handleMessageChange }\r\n                                onKeyPress={ this.handleSendMessage }\r\n                                placeholder=\"Message\"\r\n                                autoFocus\r\n                                required\r\n                                value={ message }\r\n                                helperText={ messageMessage } />\r\n                        </div>\r\n                    }\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}